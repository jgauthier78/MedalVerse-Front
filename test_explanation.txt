---------
-Outils:-
---------


catchException(Promise, errType) 
Utilisé pour tester qu'une exception a bien été levée. Permet de tester la bonne implémentation de modifiers / assert /require


--------------------
Structures Internes:
--------------------


Coverage:
---------

MedalVerse expose la majorité des fonctionnalités disponibles, seules quelques fonctions provenant des classes (AuthorHandler, EventHandler, MedalHandler, OrganizerHandler, SportsmanHandler, UserHandler) sont publiques et utilisables par un autre utilisateur que Owner
Les tests suivent le schéma de la User Story et ne couvrent pas les fonctionnalités hors de ce contexte  (NFT_Medal_Bkg, suppression de sportifs / événements / organisateurs / Admin, et AuthorHandler n'est pas utilisé)




Tests de medalVerse

contrat UserHandler:

Cas de bon Fonctionnement
  A-Enregistrer un utilisateur dans la base et vérifier le stockage des paramètres
  C-Créer un User de type sportif, et vérifier qu'un SportsMan a été créé
  D-Creer un User de type organisateur, vérifier qu'un Organizer est créé
  E-Creer un User de type auteur, vérifier qu'un Author est créé

Gestion d'erreurs
  B-Vérifier qu'un utilisateur autre que owner ne peut pas enregistrer de User
  F-Vérifier qu'une exception est générée lorsque l'on lit en dehors de la plage des sportifs créés
  G-Vérifier qu'une exception est générée lorsque l'on lit en dehors de la plage des organizers créés
  H-Vérifier qu'un user non auteur retourne un auteur vide
  
Contrat AuthorHandler:

Cas de bon Fonctionnement
  I-Ajouter une création à un auteur, vérifier la bonne écriture dans la base
  J-Vérifier qu'un création a bien un lien avec son auteur
  K-Affecte un descriptif de NFT à une création et vérifie le lien
 
Gestion d'errreurs
  L-Vérifier une exception si ajout d'une création à un utilisateur non auteur
  M-Accéder à la liste des créations d'un auteur non existant
  N-Récupérer une liste de créations en dehors des ranges
  
Contrat EventHandler:

Cas de bon Fonctionnement:
  O-Ajoute un événement sur une organization valide
  P-Démarre un événement
  Q-Arrete un événement
  R-Définit un Winner à un événement
  S-Ajoute une médaille à un événement
  T-Publie une médaille
  U-Ajoute un événement et vérifie l'écriture dans le contrat MedalVerse
  
Gestion d'erreurs
  V-Ajouter un événement sur une organization invalide
  W-Accèdér à un événement avec un id d'événement invalide
  X-Démarrer/Terminer un événement non existant
  Y-Démarrer/Terminer un événement quand on en est pas admin
  Z-

  --------------------
                NFT:
--------------------

Tests des NFTs

contrat ThrowIn: 

Cas de bon Fonctionnement
  A-Mint d'un NFTArtist , Mint d'un NFTCup avec l'uri du NFTArtist et vérifie la balance du msg.sender et l'uri du NFT
  B-Change le statut , ajoute un participant et vérifie le stockage des paramètres
  C-Change le statut , ajoute un participant, change le statut , ajoute le participant au gagnant et vérifie le stockage des paramètres
  D-Change le statut, ajoute 3 participants, suppression du premier participant et check que le participant 2 est passer en premiere position
  E-Mint d'un NFTArtist, Mint d'un NFTCup, vérifie la balance du owner, envoi du NFTArtist à user, vérifie la balance du owner, set pause au contract, verifie que pause est vrai,
    l'owner recupere le NFT à l'user, vérifie la balance de l'owner, remove pause du contrat et vérifie que pause est faux

Gestion d'erreurs
  F-Vérifier qu'il n'est pas possible de mint plusieurs NFTCup
  G-Vérifier qu'il n'est pas possible d'utiliser un fonction quand ce n'est pas le bon statut
  H-Vérifier qu'il n'est pas possible d'utiliser transferFromWithoutPermission sans etre l'owner
  I-Vérifier qu'il n'est pas possible de mettre le contrat en pause si on n'est pas l'owner
  J-Vérifier qu'il n'est pas possible de changer de statut si on n'est pas l'owner
  K-Vérifier qu'il n'est pas possible d'utiliser une fonction qui neccesite que le contrat soit en pause quand le contrat n'est pas en pause
  L-Vérifier qu'il n'est pas possible d'utiliser une fonction qui neccesite que le contrat ne soit pas en pause quand le contrat est en pause

contrat NFTArtist:

Cas de bon Fonctionnement
  A-Mint un NFTArtist, vérifie la balance de l'user ainsi que la structure du NFT


  
